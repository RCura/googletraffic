age_max               = age_max)
# Length parameter inputs to same length -------------------------------------
out_df <- mapply(query_fb_marketing_api_1call,
lat_lon               = param_grid_df$lat_lon,
radius                = param_grid_df$radius,
radius_unit           = param_grid_df$radius_unit,
location_keys         = param_grid_df$location_keys,
locales               = param_grid_df$locales,
behavior              = param_grid_df$behavior,
interest              = param_grid_df$interest,
relationship_statuses = param_grid_df$relationship_statuses,
life_events           = param_grid_df$life_events,
industries            = param_grid_df$industries,
income                = param_grid_df$income,
family_statuses       = param_grid_df$family_statuses,
education_statuses    = param_grid_df$education_statuses,
user_os               = param_grid_df$user_os,
wireless_carrier      = param_grid_df$wireless_carrier,
gender                = param_grid_df$gender,
age_min               = param_grid_df$age_min,
age_max               = param_grid_df$age_max,
MoreArgs = list(location_type = location_type,
sleep_time    = sleep_time,
show_result   = show_result,
add_query     = add_query,
add_query_hide_credentials = add_query_hide_credentials,
version       = version,
creation_act  = creation_act,
token         = token),
SIMPLIFY = F
) %>%
bind_rows()
}
df_out <- query_fb_marketing_api(location_type = "electoral_districts",
location_keys = "US:OH12",
version = VERSION,
creation_act = CREATION_ACT,
token = TOKEN,
add_query = T,
add_query_hide_credentials = F)
df_out
df_out$query
TOKEN
token <- TOKEN
latitude <- 38.92110672948418
longitude <- -77.04375197810649
distance_unit <- "kilometer"
out_df <- GET(
paste0("https://graph.facebook.com/",version,"/search"),
query=list(
type='adradiussuggestion',
latitude=latitude,
longitude=longitude,
distance_unit=distance_unit,
access_token=token
)) %>% content(as="text") %>% fromJSON %>%. [[1]]
out_df <- GET(
paste0("https://graph.facebook.com/",version,"/search"),
query=list(
type='adradiussuggestion',
latitude=latitude,
longitude=longitude,
distance_unit=distance_unit,
access_token=token
)) %>% content(as="text")
GET(
paste0("https://graph.facebook.com/",version,"/search"),
query=list(
type='adradiussuggestion',
latitude=latitude,
longitude=longitude,
distance_unit=distance_unit,
access_token=token
))
list(
type='adradiussuggestion',
latitude=latitude,
longitude=longitude,
distance_unit=distance_unit,
access_token=token
)
GET(
paste0("https://graph.facebook.com/",version,"/search"),
query=list(
type='adradiussuggestion',
latitude=latitude,
longitude=longitude,
distance_unit=distance_unit,
access_token=token
))
version
version <- VERSION
out_df <- GET(
paste0("https://graph.facebook.com/",version,"/search"),
query=list(
type='adradiussuggestion',
latitude=latitude,
longitude=longitude,
distance_unit=distance_unit,
access_token=token
)) %>% content(as="text") %>% fromJSON %>%. [[1]]
out_df
location_types <- c("recent", "home")
(location_types %in% c("home", "recent"))
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
pkgdown::deploy_to_branch()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
#usethis::use_pkgdown_github_pages()
pkgdown::deploy_to_branch()
roxygen2::roxygenise("~/Documents/Github/googletraffic")
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
#usethis::use_pkgdown_github_pages()
pkgdown::deploy_to_branch()
pkgdown::build_site()
roxygen2::roxygenise("~/Documents/Github/googletraffic")
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
#usethis::use_pkgdown_github_pages()
pkgdown::deploy_to_branch()
pkgdown::build_site()
roxygen2::roxygenise("~/Documents/Github/googletraffic")
setwd("~/Documents/Github/googletraffic")
roxygen2::roxygenise("~/Documents/Github/googletraffic")
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
#usethis::use_pkgdown_github_pages()
pkgdown::deploy_to_branch()
pkgdown::build_site()
us_sp <- getData('GADM', country='USA', level=2)
us_sp$NAME_2
us_sp <- getData('GADM', country='USA', level=1)
us_sp$NAME_1 %>% sort()
us_sp <- getData('GADM', country='USA', level=1)
dc_sp <- us_sp[us_sp$NAME_1 %in% "District of Columbia",]
us_sp <- getData('GADM', country='USA', level=1)
dc_sp <- us_sp[us_sp$NAME_1 %in% "District of Columbia",]
r <- gt_make_raster_from_polygon(polygon       = dc_sp,
height        = 2000,
width         = 2000,
zoom          = 15,
google_key    = google_key)
# Setup ------------------------------------------------------------------------
library(googletraffic)
library(tidyverse)
library(googleway)
library(htmlwidgets)
library(webshot)
library(raster)
library(png)
library(plotwidgets)
library(httr)
library(sf)
library(leaflet)
library(leaflet.extras)
library(leaflet.providers)
library(scales)
library(mapview)
library(ggpubr)
#source("https://github.com/dime-worldbank/googletraffic/blob/main/R/main.R")
api_keys_df <- read_csv("~/Dropbox/World Bank/Webscraping/Files for Server/api_keys.csv")
google_key <- api_keys_df %>%
dplyr::filter(Service == "Google Directions API",
Account == "ramarty@email.wm.edu") %>%
pull(Key)
readme_images <- "~/Documents/Github/googletraffic/images"
homepage_images <- "~/Documents/Github/googletraffic/man/figures"
us_sp <- getData('GADM', country='USA', level=1)
dc_sp <- us_sp[us_sp$NAME_1 %in% "District of Columbia",]
r <- gt_make_raster_from_polygon(polygon       = dc_sp,
height        = 2000,
width         = 2000,
zoom          = 15,
google_key    = google_key)
r_df <- rasterToPoints(r, spatial = TRUE) %>% as.data.frame()
names(r_df) <- c("value", "x", "y")
p <- ggplot() +
geom_raster(data = r_df,
aes(x = x, y = y,
fill = as.factor(value))) +
labs(fill = "Traffic\nLevel") +
scale_fill_manual(values = c("green2", "orange", "red", "#660000")) +
coord_quickmap() +
theme_void() +
theme(plot.background = element_rect(fill = "white", color="white"))
ggsave(p, filename = file.path("~/Desktop/top_example.jpg"), height = 5, width = 5)
# Example for Top of Package -------------------------------------------------
# https://www.google.com/maps/place/38%C2%B054'05.9%22N+77%C2%B002'11.7%22W/@38.9010952,-77.0350844,16.08z/data=!4m6!3m5!1s0x0:0xdfa7b78027c7aac6!7e2!8m2!3d38.9016494!4d-77.0365891!5m1!1e1
r <- gt_make_raster(location = c(38.90723410426802, -77.03655197910766),
height = 2000,
width = 2000,
zoom = 16,
google_key = google_key)
r_df <- rasterToPoints(r, spatial = TRUE) %>% as.data.frame()
names(r_df) <- c("value", "x", "y")
p <- ggplot() +
geom_raster(data = r_df,
aes(x = x, y = y,
fill = as.factor(value))) +
labs(fill = "Traffic\nLevel") +
scale_fill_manual(values = c("green2", "orange", "red", "#660000")) +
coord_quickmap() +
theme_void() +
theme(plot.background = element_rect(fill = "white", color="white"))
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 5, width = 5)
roxygen2::roxygenise("~/Documents/Github/googletraffic")
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
#usethis::use_pkgdown_github_pages()
pkgdown::deploy_to_branch()
pkgdown::build_site()
help(addLegend)
## Load Google Traffic package
library(googletraffic)
## Load additional packages for working with and visualizing data
library(leaflet)
library(leaflet.extras)
library(leaflet.providers)
library(scales)
library(mapview)
library(raster)
library(tidyverse)
## Set Google API Key
google_key <- "GOOGLE-API-KEY-HERE"
## Define Leaflet Palette and Legend
traffic_pal <- colorNumeric(c("green", "orange", "red", "#660000"),
1:4,
na.color = "transparent")
traffic_leg <- addLegend(pal = traffic_pal,
values = 1:4,
labels = c("No traffic",
"Medium traffic",
"High traffic",
"Heavy traffic"),
title = "Legend",
opacity = 1)
addLegend(pal = traffic_pal,
values = 1:4,
labels = c("No traffic",
"Medium traffic",
"High traffic",
"Heavy traffic"),
title = "Legend",
opacity = 1)
r <- gt_make_raster(location   = c(40.712778, -74.006111),
height     = 1000,
width      = 1000,
zoom       = 16,
google_key = google_key)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1)
r
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(zoom=17)
leaflet(width = "100%", zoom =17) %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, long = -74.006111, zoom=17)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, lon = -74.006111, zoom=17)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, lng = -74.006111, zoom=17)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, lng = -74.006111, zoom=16)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, lng = -74.006111, zoom=15)
help(addLegend)
addLegend(pal = traffic_pal,
values = 1:4,
labels = c("No traffic",
"Medium traffic",
"High traffic",
"Heavy traffic"),
title = "Legend",
opacity = 1)
addLegend(map = NULL,
pal = traffic_pal,
values = 1:4,
labels = c("No traffic",
"Medium traffic",
"High traffic",
"Heavy traffic"),
title = "Legend",
opacity = 1)
legend_info <- c(traffic_pal,
values = 1:4,
labels = c("No traffic",
"Medium traffic",
"High traffic",
"Heavy traffic"),
title = "Legend",
opacity = 1)
traffic_pal
## Set Google API Key
google_key <- "GOOGLE-API-KEY-HERE"
## Define Leaflet Palette and Legend
traffic_pal <- colorNumeric(c("green", "orange", "red", "#660000"),
1:4,
na.color = "transparent")
traffic_pal
us_sp <- getData('GADM', country='USA', level=2)
ny_sp <- us_sp[us_sp$NAME_2 %in% "New York",]
ny_sp %>% gCentroid()
library(rgeos)
ny_sp %>% gCentroid()
ny_sp %>% gCentroid() %>% coordinates()
api_keys_df <- read_csv("~/Dropbox/World Bank/Webscraping/Files for Server/api_keys.csv")
google_key <- api_keys_df %>%
dplyr::filter(Service == "Google Directions API",
Account == "ramarty@email.wm.edu") %>%
pull(Key)
## Make raster
r <- gt_make_raster_from_polygon(polygon    = ny_sp,
height     = 2000,
width      = 2000,
zoom       = 10,
google_key = google_key)
## Map raster
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.78264, lng = -73.96903, zoom=15)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.78264, lng = -73.96903, zoom=10)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.78264, lng = -73.96903, zoom=11)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.78264, lng = -73.96903, zoom=12)
## Make raster
r <- gt_make_raster(location   = c(40.712778, -74.006111),
height     = 1000,
width      = 1000,
zoom       = 16,
google_key = google_key)
## Map raster
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, lng = -74.006111, zoom = 13)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, lng = -74.006111, zoom = 14)
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, lng = -74.006111, zoom = 15)
## Make raster
r <- gt_make_raster(location   = c(41.384900, -78.891302),
height     = 1000,
width      = 1000,
zoom       = 7,
google_key = google_key)
## Map raster
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1)
## Map raster
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 40.712778, lng = -74.006111, zoom = 5)
## Load Google Traffic package
library(googletraffic)
## Load additional packages for working with and visualizing data
library(leaflet)
library(leaflet.extras)
library(leaflet.providers)
library(scales)
library(mapview)
library(raster)
library(tidyverse)
## Set Google API Key
google_key <- "GOOGLE-API-KEY-HERE"
## Define Leaflet Palette and Legend
traffic_pal <- colorNumeric(c("green", "orange", "red", "#660000"),
1:4,
na.color = "transparent")
## Map raster
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 41.384900, lng = -78.891302, zoom = 5)
## Map raster
leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(r, colors = traffic_pal, opacity = 1) %>%
setView(lat = 41.384900, lng = -78.891302, zoom = 6)
setwd("~/Documents/Github/googletraffic")
roxygen2::roxygenise("~/Documents/Github/googletraffic")
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
#usethis::use_pkgdown_github_pages()
pkgdown::deploy_to_branch()
pkgdown::build_site()
# Example for Top of Package -------------------------------------------------
# https://www.google.com/maps/place/38%C2%B054'05.9%22N+77%C2%B002'11.7%22W/@38.9010952,-77.0350844,16.08z/data=!4m6!3m5!1s0x0:0xdfa7b78027c7aac6!7e2!8m2!3d38.9016494!4d-77.0365891!5m1!1e1
r <- gt_make_raster(location = c(38.90723410426802, -77.03655197910766),
height = 2000,
width = 2000,
zoom = 16,
google_key = google_key)
r_df <- rasterToPoints(r, spatial = TRUE) %>% as.data.frame()
names(r_df) <- c("value", "x", "y")
p <- ggplot() +
geom_raster(data = r_df,
aes(x = x, y = y,
fill = as.factor(value))) +
labs(fill = "Traffic\nLevel") +
scale_fill_manual(values = c("green2", "orange", "red", "#660000")) +
coord_quickmap() +
theme_void() +
theme(plot.background = element_rect(fill = "white", color="white"))
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.8, width = 5)
google_key
# Setup ------------------------------------------------------------------------
library(googletraffic)
library(tidyverse)
library(googleway)
library(htmlwidgets)
library(webshot)
library(raster)
library(png)
library(plotwidgets)
library(httr)
library(sf)
library(leaflet)
library(leaflet.extras)
library(leaflet.providers)
library(scales)
library(mapview)
library(ggpubr)
#source("https://github.com/dime-worldbank/googletraffic/blob/main/R/main.R")
api_keys_df <- read_csv("~/Dropbox/World Bank/Webscraping/Files for Server/api_keys.csv")
google_key <- api_keys_df %>%
dplyr::filter(Service == "Google Directions API",
Account == "ramarty@email.wm.edu") %>%
pull(Key)
homepage_images <- "~/Documents/Github/googletraffic/man/figures"
# Example for Top of Package -------------------------------------------------
# https://www.google.com/maps/place/38%C2%B054'05.9%22N+77%C2%B002'11.7%22W/@38.9010952,-77.0350844,16.08z/data=!4m6!3m5!1s0x0:0xdfa7b78027c7aac6!7e2!8m2!3d38.9016494!4d-77.0365891!5m1!1e1
r <- gt_make_raster(location = c(38.90723410426802, -77.03655197910766),
height = 2000,
width = 2000,
zoom = 16,
google_key = google_key)
r_df <- rasterToPoints(r, spatial = TRUE) %>% as.data.frame()
names(r_df) <- c("value", "x", "y")
p <- ggplot() +
geom_raster(data = r_df,
aes(x = x, y = y,
fill = as.factor(value))) +
labs(fill = "Traffic\nLevel") +
scale_fill_manual(values = c("green2", "orange", "red", "#660000")) +
coord_quickmap() +
theme_void() +
theme(plot.background = element_rect(fill = "white", color="white"))
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.8, width = 5)
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.5, width = 5)
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4, width = 5)
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.5, width = 5)
p <- ggplot() +
geom_raster(data = r_df,
aes(x = x, y = y,
fill = as.factor(value))) +
labs(fill = "Traffic\nLevel") +
scale_fill_manual(values = c("green2", "orange", "red", "#660000")) +
coord_quickmap() +
theme_void() +
theme(plot.background = element_rect(fill = "white", color="white"),
plot.margin=grid::unit(c(0,0,0,0), "mm"))
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.5, width = 5)
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 5, width = 5)
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.5, width = 5)
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.4, width = 5)
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.5, width = 5)
ggsave(p, filename = file.path(homepage_images, "top_example.jpg"), height = 4.5, width = 5)
roxygen2::roxygenise("~/Documents/Github/googletraffic")
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
roxygen2::roxygenise("~/Documents/Github/googletraffic")
setwd("~/Documents/Github/googletraffic")
usethis::use_pkgdown()
#usethis::use_pkgdown_github_pages()
pkgdown::deploy_to_branch()
